// ====================================================
//       Controller Vulnerability Report
// ====================================================

const serviceReport = require('../services/vulnerabilityReport')

//================================================
//Mostrar todos los reportes de vulnerabilidad
//================================================
async function getVulnerabilityReports(req, res) {
    return serviceReport.getVulnerabilityReports(req, res);
}

//===========================================================
//Mostrar todos los reportes de vulnerabilidad por estatus
//===========================================================
async function getVulnerabilityReportsByStatus(req, res) {
    return serviceReport.getVulnerabilityReportsByStatus(req, res);
}

//===========================================
//Mostrar reporte de vulnerabilidad por id
//===========================================
async function getVulnerabilityReportById(req, res) {
    return serviceReport.getVulnerabilityReportById(req, res);
}

// ============================================
// Reportes de vulnerabilidad por approved
// ============================================
async function getVulnerabilityReportsByApproved(req, res) {
    return serviceReport.getVulnerabilityReportsByApproved(req, res);
}

// ============================================
// Reportes de vulnerabilidad por program id
// ============================================
async function getVulnerabilityReportsByProgramId(req, res) {
    return serviceReport.getVulnerabilityReportsByProgramId(req, res);
}

// ============================================
// Reportes de vulnerabilidad por hacker id
// ============================================
async function getVulnerabilityReportsByHackerId(req, res) {
    return serviceReport.getVulnerabilityReportsByHackerId(req, res);
}

// ============================================
// Reportes de vulnerabilidad por business id
// ============================================
async function getVulnerabilityReportsByBusinessId(req, res) {
    return serviceReport.getVulnerabilityReportsByBusinessId(req, res);
}

// ============================================================
// Reportes de vulnerabilidad por tipo de vulnerabilidad id
// ============================================================
async function getVulnerabilityReportsByVulnerabilityTypeId(req, res) {
    return serviceReport.getVulnerabilityReportsByVulnerabilityTypeId(req, res);
}

// ============================================================
// Reportes de vulnerabilidad de programas p√∫blicos
// ============================================================
async function getVulnerabilityReportsByProgramPublics(req, res) {
    return serviceReport.getVulnerabilityReportsByProgramPublics(req, res);
}

//====================================
//Crear reporte de vulnerabilidad
//====================================
async function saveVulnerabilityReport(req, res) {
    return serviceReport.saveVulnerabilityReport(req, res)
}

//========================================
// Actualizar reporte de vulnerabilidad
//========================================
async function updateVulnerabilityReport(req, res) {
    return serviceReport.updateVulnerabilityReportById(req, res);
}

//================================================
// Actualizar archivo de reporte de vulnerabilidad
//================================================
async function updateFileVulnerabilityReport(req, res) {
    return serviceReport.updateFileVulnerabilityReportById(req, res);
}

//===============================================
// Cambiar status de reporte de vulnerabilidad
//===============================================
async function updateVulnerabilityReportStatus(req, res) {
    return serviceReport.updateVulnerabilityReportStatusById(req, res);
}

// =================================================
// Aprobar reporte de vulnerabilidad
// =================================================
async function approveVulnerabilityReportById(req, res) {
    return serviceReport.approveVulnerabilityReportById(req, res);
}

// =================================================
// Rechazar reporte de vulnerabilidad
// =================================================
async function rejectVulnerabilityReportById(req, res) {
    return serviceReport.rejectVulnerabilityReportById(req, res);
}

// =================================================
// Agregar comentario a reporte
// =================================================
async function saveComment(req, res) {
    return serviceReport.saveComment(req, res);
}


// =================================================
// Agregar paso a reporte
// =================================================
async function saveStep(req, res) {
    return serviceReport.saveStep(req, res);
}

// =================================================
// Editar paso a reporte
// =================================================
async function editStep(req, res) {
    return serviceReport.editStep(req, res);
}

// =================================================
// Eliminar paso a reporte
// =================================================
async function deleteStep(req, res) {
    return serviceReport.deleteStep(req, res);
}

// =======================================================
// Reportes de vulnerabilidad por id para inbox
// =======================================================
async function getInboxByReportId(req, res) {
    return serviceReport.getInboxByReportId(req, res);
}

module.exports = {
    getVulnerabilityReports,
    getVulnerabilityReportsByStatus,
    getVulnerabilityReportById,
    getVulnerabilityReportsByApproved,
    getVulnerabilityReportsByProgramId,
    getVulnerabilityReportsByHackerId,
    getVulnerabilityReportsByBusinessId,
    getVulnerabilityReportsByVulnerabilityTypeId,
    getVulnerabilityReportsByProgramPublics,
    saveVulnerabilityReport,
    updateVulnerabilityReport,
    updateFileVulnerabilityReport,
    updateVulnerabilityReportStatus,
    approveVulnerabilityReportById,
    rejectVulnerabilityReportById,
    saveComment,
    saveStep,
    editStep,
    deleteStep,
    getInboxByReportId
}